name: Deploy To EC2

on:
  push:
    branches:
      - develop

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      # GitHub 저장소에서 파일 불러오기
      - name: GitHub Repository 파일 불러오기
        uses: actions/checkout@v4

      # JDK 17 설치
      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # application-jelly.properties 파일 생성
      - name: application-jelly.properties 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application-jelly.properties

      # Gradle 빌드 (WebApp 및 WebServer)
      - name: Gradle 빌드 (WebApp & WebServer)
        run: |
          ./gradlew jarWebApp
          ./gradlew jarWebServer

      # 빌드 파일 확인
      - name: 빌드 파일 확인
        run: |
          echo "WebApp 빌드 파일:"
          ls -l ./build/libs/webapp/
          echo "WebServer 빌드 파일:"
          ls -l ./build/libs/webserver/

      # WebApp 빌드 파일 이름 변경
      - name: WebApp 빌드 파일 이름 변경
        run: |
          WEBAPP_FILE=$(ls ./build/libs/webapp/webapp-*.jar 2>/dev/null || echo "")
          if [ -z "$WEBAPP_FILE" ]; then
            echo "webapp JAR 파일이 없습니다."
            exit 1
          fi
          mv "$WEBAPP_FILE" ./webapp.jar
          echo "WebApp 빌드 파일 준비 완료: ./webapp.jar"

      # WebServer 빌드 파일 이름 변경
      - name: WebServer 빌드 파일 이름 변경
        run: |
          WEBSERVER_FILE=$(ls ./build/libs/webserver/webserver-*.jar 2>/dev/null || echo "")
          if [ -z "$WEBSERVER_FILE" ]; then
            echo "webserver JAR 파일이 없습니다."
            exit 1
          fi
          mv "$WEBSERVER_FILE" ./webserver.jar
          echo "WebServer 빌드 파일 준비 완료: ./webserver.jar"

      # WebApp 및 WebServer 파일 전송 및 배포
      - name: EC2 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -x  # 명령 디버깅 활성화
            APP_DIR="/home/ubuntu/hottoke_BE"
            TOBE_DIR="$APP_DIR/tobe"

            # 재사용 가능한 배포 함수
            deploy_service() {
              local SERVICE_NAME=$1
              local PORT=$2
              local JAR_FILE="$SERVICE_NAME.jar"
              local CURRENT_DIR="$APP_DIR/current/$SERVICE_NAME"

              echo "==== $SERVICE_NAME 배포 시작 ===="

              # current 디렉터리 준비
              if [ -e "$APP_DIR/current" ]; then
                if [ ! -d "$APP_DIR/current" ]; then
                  echo "경로 $APP_DIR/current 는 파일로 존재합니다. 삭제 중..."
                  rm -f "$APP_DIR/current" || { echo "파일 삭제 실패: $APP_DIR/current"; exit 1; }
                else
                  echo "경로 $APP_DIR/current 는 이미 디렉터리로 존재합니다."
                fi
              else
                echo "경로 $APP_DIR/current 는 존재하지 않습니다. 새로 생성합니다."
              fi
              mkdir -p "$APP_DIR/current"

              # 기존 서비스 디렉터리 삭제 및 생성
              if [ -d "$CURRENT_DIR" ]; then
                echo "기존 $SERVICE_NAME 디렉터리 삭제: $CURRENT_DIR"
                rm -rf "$CURRENT_DIR" || { echo "$SERVICE_NAME 디렉터리 삭제 실패"; exit 1; }
              fi
              mkdir -p "$CURRENT_DIR" || { echo "$SERVICE_NAME 디렉터리 생성 실패"; exit 1; }
              echo "$SERVICE_NAME 디렉터리 생성 완료: $CURRENT_DIR"

              # JAR 파일 확인 및 이동
              if [ ! -f "$TOBE_DIR/$JAR_FILE" ]; then
                echo "$JAR_FILE 파일이 없습니다!"
                exit 1
              fi
              mv "$TOBE_DIR/$JAR_FILE" "$CURRENT_DIR/$JAR_FILE" || { echo "JAR 파일 이동 실패"; exit 1; }
              echo "==== $SERVICE_NAME 파일 이동 완료 ===="

              # 기존 프로세스 종료 및 새로운 서비스 실행
              echo "$PORT 포트의 기존 프로세스 종료 중..."
              sudo fuser -k -n tcp $PORT || true

              echo "$SERVICE_NAME 실행 시작..."
              nohup java -jar "$CURRENT_DIR/$JAR_FILE" > "$CURRENT_DIR/$SERVICE_NAME.log" 2>&1 &
              echo "==== $SERVICE_NAME 배포 완료 ===="

              # 실행 확인
              sleep 5
              if ! pgrep -f "$CURRENT_DIR/$JAR_FILE"; then
                echo "$SERVICE_NAME 실행 실패"
                tail -n 50 "$CURRENT_DIR/$SERVICE_NAME.log"
                exit 1
              else
                echo "$SERVICE_NAME 실행 중"
              fi
            }

            # WebApp 배포
            deploy_service "webapp" 8080

            # WebServer 배포
            deploy_service "webserver" 8081
