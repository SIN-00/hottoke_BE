name: Deploy To EC2

on:
  push:
    branches:
      - develop

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: application-jelly.properties 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application-jelly.properties

      # EC2 #1 무중단 배포 (web)
      - name: EC2 #1에 무중단 배포 (Gradle runWeb 실행)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_1_HOST }}
          username: ${{ secrets.EC2_1_USERNAME }}
          key: ${{ secrets.EC2_1_PRIVATE_KEY }}
          script_stop: true
          script: |
            DEPLOY_DIR="/home/ubuntu/hottoke_BE"
            GREEN_DIR="$DEPLOY_DIR/green"
            BLUE_DIR="$DEPLOY_DIR/blue"

            # 기존 실행 종료 (포트 8081 사용 중지)
            sudo fuser -k -n tcp 8081 || true

            # Green 디렉터리 초기화 및 복사
            mkdir -p $GREEN_DIR
            rsync -av --exclude="$GREEN_DIR" --exclude="$BLUE_DIR" $DEPLOY_DIR/ $GREEN_DIR/

            # Gradle runWeb 실행
            cd $GREEN_DIR
            nohup ./gradlew runWeb > $GREEN_DIR/webserver.log 2>&1 &

            # 심볼릭 링크로 트래픽 전환
            ln -sfn $GREEN_DIR $DEPLOY_DIR/current

            # 기존 Blue 디렉터리 정리
            if [ -d "$BLUE_DIR" ]; then
              rm -rf $BLUE_DIR
            fi
            mv $GREEN_DIR $BLUE_DIR  # Green -> Blue 역할 전환

      # EC2 #2 무중단 배포 (webapp)
      - name: EC2 #2에 무중단 배포 (Gradle runWebApp 실행)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_2_HOST }}
          username: ${{ secrets.EC2_2_USERNAME }}
          key: ${{ secrets.EC2_2_PRIVATE_KEY }}
          script_stop: true
          script: |
            DEPLOY_DIR="/home/ubuntu/hottoke_BE"
            GREEN_DIR="$DEPLOY_DIR/green"
            BLUE_DIR="$DEPLOY_DIR/blue"

            # 기존 실행 종료 (포트 8080 사용 중지)
            sudo fuser -k -n tcp 8080 || true

            # Green 디렉터리 초기화 및 복사
            mkdir -p $GREEN_DIR
            rsync -av --exclude="$GREEN_DIR" --exclude="$BLUE_DIR" $DEPLOY_DIR/ $GREEN_DIR/

            # Gradle runWebApp 실행
            cd $GREEN_DIR
            nohup ./gradlew runWebApp > $GREEN_DIR/webapp.log 2>&1 &

            # 심볼릭 링크로 트래픽 전환
            ln -sfn $GREEN_DIR $DEPLOY_DIR/current

            # 기존 Blue 디렉터리 정리
            if [ -d "$BLUE_DIR" ]; then
              rm -rf $BLUE_DIR
            fi
            mv $GREEN_DIR $BLUE_DIR  # Green -> Blue 역할 전환
